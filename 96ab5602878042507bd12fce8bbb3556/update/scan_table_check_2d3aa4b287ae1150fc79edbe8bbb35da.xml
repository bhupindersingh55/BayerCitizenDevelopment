<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <attributes/>
        <category>performance</category>
        <conditions table="sys_ui_action">scriptLIKEgetRowCount^EQ<item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="getRowCount"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>UI Actions using GlideRecord's getRowCount property may cause performance issues when working on tables with a high record count.</description>
        <documentation_url>https://developer.servicenow.com/dev.do#!/reference/api/quebec/server_legacy/c_GlideAggregateAPI?navFilter=GlideAggregate</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>UI Buttons using getRowCount may cause performance issues</name>
        <priority>2</priority>
        <resolution_details>Instead of GlideRecord API,  use GlideAggregate to improve performance. Refer the following document on how to COUNT the records using GlideAggregate
--------------------------------------------------------------------------------
| Sample script to count number of records in incident table. | 
--------------------------------------------------------------------------------
var aggIncident = new GlideAggregate('incident');
var incidentCount ;
aggIncident.addAggregate('COUNT');
aggIncident.query();
while(aggIncident.next()){
           incidentCount = aggIncident.getAggregate('COUNT')
}
gs.print(incidentCount)</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

    // Add your code here

})(engine);]]></script>
        <short_description>UI Actions using getRowCount may cause performance issues</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>GIYYH</sys_created_by>
        <sys_created_on>2022-10-18 14:38:55</sys_created_on>
        <sys_id>2d3aa4b287ae1150fc79edbe8bbb35da</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>UI Buttons using getRowCount may cause performance issues</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerCitizenDevelopment">96ab5602878042507bd12fce8bbb3556</sys_scope>
        <sys_update_name>scan_table_check_2d3aa4b287ae1150fc79edbe8bbb35da</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:57:33</sys_updated_on>
        <table>sys_ui_action</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerCitizenDevelopment">96ab5602878042507bd12fce8bbb3556</claim_owner_scope>
        <claim_timestamp>18d61500ec10000001</claim_timestamp>
        <metadata_update_name>scan_table_check_2d3aa4b287ae1150fc79edbe8bbb35da</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerCitizenDevelopment</previous_claim_name>
        <previous_claim_scope>96ab5602878042507bd12fce8bbb3556</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:57:33</sys_created_on>
        <sys_id>221cda42878042507bd12fce8bbb35e8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:57:33</sys_updated_on>
    </sys_claim>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerCitizenDevelopment">96ab5602878042507bd12fce8bbb3556</claim_owner_scope>
        <claim_timestamp>18d6149bcb50000001</claim_timestamp>
        <metadata_update_name>scan_table_check_2d3aa4b287ae1150fc79edbe8bbb35da</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:57:33</sys_created_on>
        <sys_id>e21cda42878042507bd12fce8bbb35e8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:57:33</sys_updated_on>
    </sys_claim>
</record_update>
